#ifndef BUOH_APPLICATION_H
    #define BUOH_APPLICATION_H

    #include <glib-object.h>
    #include <gtk/gtk.h>

    G_BEGIN_DECLS
        enum {
            COMIC_LIST_VISIBLE,
            COMIC_LIST_TITLE,
            COMIC_LIST_AUTHOR,
            COMIC_LIST_LANGUAGE,
            COMIC_LIST_COMIC_MANAGER,
            N_COLUMNS
        };

        #define BUOH_TYPE_APPLICATION (buoh_application_get_type())

        G_DECLARE_FINAL_TYPE (BuohApplication, buoh_application, BUOH, APPLICATION, GtkApplication)

        /** ************* Generated by G_DECLARE_FINAL_TYPE ************* */
        #define G_DECLARE_FINAL_TYPE(ModuleObjName, module_obj_name, MODULE, OBJ_NAME, ParentName)

        GType buoh_application_get_type(void);
        
        G_GNUC_BEGIN_IGNORE_DEPRECATIONS
            /*               Existing type       alias      */
            typedef struct _BuohApplication BuohApplication;

            typedef struct {
                ParentNameClass parent_class;
            } BuohApplicationClass;
                                                    
            _GLIB_DEFINE_AUTOPTR_CHAINUP (BuohApplication, GtkApplication)                
            G_DEFINE_AUTOPTR_CLEANUP_FUNC (BuohApplicationClass, g_type_class_unref)
                                                    
            G_GNUC_UNUSED static inline BuohApplication * BUOH_APPLICATION (gpointer ptr) {
                return G_TYPE_CHECK_INSTANCE_CAST (ptr, buoh_application_get_type (), BuohApplication);
            }

            G_GNUC_UNUSED static inline gboolean BUOH_IS_APPLICATION (gpointer ptr) {
                return G_TYPE_CHECK_INSTANCE_TYPE (ptr, buoh_application_get_type ());
            }   
        G_GNUC_END_IGNORE_DEPRECATIONS
        /** ************* Generated by G_DECLARE_FINAL_TYPE ************* */

        BuohApplication * buoh_application_get_instance       (void);
        BuohApplication * buoh_application_new                (void);

        void              buoh_application_activate           (GApplication    * buoh);
        void              buoh_application_startup            (GApplication    * buoh);
        GtkTreeModel    * buoh_application_get_comics_model   (BuohApplication * buoh);
        const gchar     * buoh_application_get_datadir        (BuohApplication * buoh);

        void             buoh_debug                          (const gchar     *format, ...);
    G_END_DECLS

#endif /* !BUOH_APPLICATION_H */
